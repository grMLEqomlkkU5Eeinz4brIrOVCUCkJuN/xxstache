name: Tests

on:
  push:
    branches: [main, master, dev, feature/*]
  pull_request:
    branches: [main, master, dev, feature/*]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [20.x]

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ matrix.node-version }}
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run linter
        run: npm run lint || true

      - name: Run tests
        run: npm test

      - name: Build project
        run: npm run build

      - name: Cleanup test artifacts (Unix)
        if: always() && matrix.os != 'windows-latest'
        continue-on-error: true
        shell: bash
        run: |
          npm run clean || true
          rm -rf .tmp node_modules/.cache || true

      - name: Cleanup test artifacts (Windows)
        if: always() && matrix.os == 'windows-latest'
        continue-on-error: true
        shell: pwsh
        run: |
          npm run clean
          Remove-Item -Recurse -Force .tmp -ErrorAction SilentlyContinue
          Remove-Item -Recurse -Force node_modules/.cache -ErrorAction SilentlyContinue

  bench:
    runs-on: ubuntu-latest
    needs: test
    if: github.event_name == 'push'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20.x
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Run benchmarks
        run: npm run bench

